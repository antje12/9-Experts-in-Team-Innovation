version: "3"
services:
  # #HDFS
  # namenode:
  #   #restart: unless-stopped
  #   image: apache/hadoop:3
  #   hostname: namenode
  #   command: ["hdfs", "namenode"]
  #   ports:
  #     - 9870:9870
  #   env_file:
  #     - ./HDFS/config
  #   environment:
  #       ENSURE_NAMENODE_DIR: "/tmp/hadoop-root/dfs/name"
  #   networks:
  #     sharednetwork:
  
  # #HDFS
  # datanode:
  #   #restart: unless-stopped
  #   image: apache/hadoop:3
  #   command: ["hdfs", "datanode"]
  #   env_file:
  #     - ./HDFS/config
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9870"
  #   volumes:
  #     - ./datanode_data:/hadoop/dfs/data
  #   networks:
  #     sharednetwork:
    
  
  # #HDFS
  # resourcemanager:
  #   #restart: unless-stopped
  #   image: apache/hadoop:3
  #   hostname: resourcemanager
  #   command: ["yarn", "resourcemanager"]
  #   ports:
  #       - 8088:8088
  #   env_file:
  #     - ./HDFS/config
  #   volumes:
  #     - ./test.sh:/opt/test.sh
  #   networks:
  #     sharednetwork:

  # #HDFS
  # nodemanager:
  #   #restart: unless-stopped
  #   image: apache/hadoop:3
  #   command: ["yarn", "nodemanager"]
  #   env_file:
  #     - ./HDFS/config
  #   networks:
  #     sharednetwork:

  # hive-server:
  #   #restart: unless-stopped
  #   image: bde2020/hive:2.3.2-postgresql-metastore
  #   env_file:
  #     - ./HDFS/hadoop-hive.env
  #   depends_on:
  #     - hive-metastore
  #     - namenode
  #     - datanode
  #   environment:
  #     SERVICE_PRECONDITION: "hive-metastore:9083"
  #     HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
  #   ports:
  #     - 10000:10000
  #   networks:
  #     sharednetwork:

  # hive-metastore:
  #   image: bde2020/hive:2.3.2-postgresql-metastore
  #   env_file:
  #     - ./HDFS/hadoop-hive.env
  #   depends_on:
  #     - hive-metastore-db
  #   command: /opt/hive/bin/hive --service metastore
  #   environment:
  #     SERVICE_PRECONDITION: "namenode:9870 hive-metastore-db:5432"
  #   ports:
  #     - "9083:9083"
  #   networks:
  #     sharednetwork:

  # hive-metastore-db:
  #   #restart: unless-stopped
  #   build: 
  #     context: ./HIVE
  #     dockerfile: Dockerfile
  #   environment:
  #     - POSTGRES_HOST_AUTH_METHOD=trust
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     sharednetwork:

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    volumes:
      - namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop-hive.env
    ports:
      - "50070:50070"
    networks:
      sharednetwork:

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    volumes:
      - datanode:/hadoop/dfs/data
    env_file:
      - ./hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
    ports:
      - "50075:50075"
    networks:
      sharednetwork:

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"
    networks:
      sharednetwork:

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"
    networks:
      sharednetwork:

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    networks:
        sharednetwork:

  redis-server:
    image: redis
    ports:
      - 6379:6379
    volumes:
      - ./AguardioEIT/RedisPlugin/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      sharednetwork:

  api:
    build: 
      context: ./AguardioEIT
      dockerfile: Dockerfile
    ports:
      - 8082:80
    depends_on:
      - postgres
      - mongo.one.db
      - mongo.two.db
      - mongo.three.db
    environment:
      - DOCKERIZED=true
    networks:
      sharednetwork:

  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: aguardio
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_sensor_data:/var/lib/postgresql/data
    ports:
      - 5444:5432
    networks:
      sharednetwork:
  
  mongo.one.db:
    container_name: mongo.one.db
    image: mongo:latest
    volumes:
      - mongo.one.vol:/data/db
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
    networks:
      sharednetwork:
 
  mongo.two.db:
    container_name: mongo.two.db
    image: mongo:latest
    depends_on:
      - mongo.one.db
    volumes:
      - mongo.two.vol:/data/db
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
    networks:
      sharednetwork:
 
  mongo.three.db:
    container_name: mongo.three.db
    image: mongo:latest
    depends_on:
      - mongo.one.db      
    volumes:
      - mongo.three.vol:/data/db
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
    networks:
      sharednetwork:

  leak-sensor:
    container_name: leak-sensor
    build: ./kafkaProducer/leak_sensor
    networks:
      sharednetwork:


  shower-sensor:
    container_name: shower-sensor
    build: ./kafkaProducer/shower_sensor
    networks:
      sharednetwork:
 
volumes:
  postgres_data:
  postgres_sensor_data:
  mongo.one.vol:
    name: "mongo.one.vol"
  mongo.two.vol:
    name: "mongo.two.vol"
  mongo.three.vol:
    name: "mongo.three.vol"
  namenode:
  datanode:

networks:
  sharednetwork:
    name: "sharednetwork"
