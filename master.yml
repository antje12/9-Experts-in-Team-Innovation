version: "3"
services:

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    restart: unless-stopped
    volumes:
      - datanode:/hadoop/dfs/data
    env_file:
      - ./hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "192.168.8.12:50070"
    ports:
      - "50075:50075"

  mongo.db:
    container_name: mongo.db
    image: mongo:latest
    volumes:
      - mongo.vol:/data/db
    restart: unless-stopped
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
    ports:
      - "27017:27017"
      
  redis-server:
    image: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - ./AguardioEIT/RedisPlugin/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf

  api:
    build: 
      context: ./AguardioEIT
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 8082:80
    depends_on:
      - mongo.db
    environment:
      - DOCKERIZED=true
  
  leak-sensor:
    container_name: leak-sensor
    build: ./kafkaProducer/leak_sensor
    restart: unless-stopped
    depends_on:
      - schema-registry

  shower-sensor:
    container_name: shower-sensor
    build: ./kafkaProducer/shower_sensor
    restart: unless-stopped
    depends_on:
      - schema-registry
 
volumes:
  mongo.vol:
    name: "mongo.vol"
  datanode:
    name: datanode
